--- a/mt7603/dma.c
+++ b/mt7603/dma.c
@@ -121,7 +121,7 @@
 			mt76_rx(&dev->mt76, q, skb);
 			return;
 		}
-		fallthrough;
+		/* fall through */
 	default:
 		dev_kfree_skb(skb);
 		break;
--- a/mt7603/mac.c
+++ b/mt7603/mac.c
@@ -590,7 +590,7 @@
 		switch (FIELD_GET(MT_RXV1_TX_MODE, rxdg0)) {
 		case MT_PHY_TYPE_CCK:
 			cck = true;
-			fallthrough;
+			/* fall through */
 		case MT_PHY_TYPE_OFDM:
 			i = mt76_get_rate(&dev->mt76, sband, i, cck);
 			break;
@@ -1161,7 +1161,7 @@
 	switch (FIELD_GET(MT_TX_RATE_MODE, final_rate)) {
 	case MT_PHY_TYPE_CCK:
 		cck = true;
-		fallthrough;
+		/* fall through */
 	case MT_PHY_TYPE_OFDM:
 		if (dev->mphy.chandef.chan->band == NL80211_BAND_5GHZ)
 			sband = &dev->mphy.sband_5g.sband;
--- a/mt7615/mac.c
+++ b/mt7615/mac.c
@@ -378,7 +378,7 @@
 		switch (FIELD_GET(MT_RXV1_TX_MODE, rxdg0)) {
 		case MT_PHY_TYPE_CCK:
 			cck = true;
-			fallthrough;
+			/* fall through */
 		case MT_PHY_TYPE_OFDM:
 			i = mt76_get_rate(&dev->mt76, sband, i, cck);
 			break;
@@ -1271,7 +1271,7 @@
 	switch (FIELD_GET(MT_TX_RATE_MODE, final_rate)) {
 	case MT_PHY_TYPE_CCK:
 		cck = true;
-		fallthrough;
+		/* fall through */
 	case MT_PHY_TYPE_OFDM:
 		mphy = &dev->mphy;
 		if (sta->wcid.ext_phy && dev->mt76.phy2)
@@ -1497,7 +1497,7 @@
 			mt76_rx(&dev->mt76, q, skb);
 			return;
 		}
-		fallthrough;
+		/* fall through */
 	default:
 		dev_kfree_skb(skb);
 		break;
@@ -2298,7 +2298,7 @@
 			phy->n_beacon_vif++;
 		else
 			phy->n_beacon_vif--;
-		fallthrough;
+		/* fall through */
 	default:
 		break;
 	}
--- a/mt7615/mcu.c
+++ b/mt7615/mcu.c
@@ -3303,7 +3303,7 @@
 			freq = freq_bw40[idx];
 			break;
 		}
-		fallthrough;
+		/* fall through */
 	case NL80211_CHAN_WIDTH_40:
 		idx = mt7615_find_freq_idx(freq_bw40, ARRAY_SIZE(freq_bw40),
 					   freq);
--- a/mt76x02_mac.c
+++ b/mt76x02_mac.c
@@ -300,7 +300,7 @@
 		return 0;
 	case MT_PHY_TYPE_HT_GF:
 		txrate->flags |= IEEE80211_TX_RC_GREEN_FIELD;
-		fallthrough;
+		/* fall through */
 	case MT_PHY_TYPE_HT:
 		txrate->flags |= IEEE80211_TX_RC_MCS;
 		txrate->idx = idx;
@@ -464,7 +464,7 @@
 			rates[1].idx = 0;
 			break;
 		}
-		fallthrough;
+		/* fall through */
 	default:
 		rates[1].idx = max_t(int, rates[0].idx - 1, 0);
 		break;
@@ -679,7 +679,7 @@
 		return 0;
 	case MT_PHY_TYPE_HT_GF:
 		status->enc_flags |= RX_ENC_FLAG_HT_GF;
-		fallthrough;
+		/* fall through */
 	case MT_PHY_TYPE_HT:
 		status->encoding = RX_ENC_HT;
 		status->rate_idx = idx;
--- a/mt76x0/phy.c
+++ b/mt76x0/phy.c
@@ -734,7 +734,7 @@
 	case 1:
 		if (chan->band == NL80211_BAND_2GHZ)
 			tssi_target += 29491; /* 3.6 * 8192 */
-		fallthrough;
+		/* fall through */
 	case 0:
 		break;
 	default:
--- a/usb.c
+++ b/usb.c
@@ -616,7 +616,7 @@
 	default:
 		dev_err_ratelimited(dev->dev, "rx urb failed: %d\n",
 				    urb->status);
-		fallthrough;
+		/* fall through */
 	case 0:
 		break;
 	}
