--- a/mt7603/main.c
+++ b/mt7603/main.c
@@ -567,7 +567,6 @@
 	u16 ssn = params->ssn;
 	u8 ba_size = params->buf_size;
 	struct mt76_txq *mtxq;
-	int ret = 0;
 
 	if (!txq)
 		return -EINVAL;
@@ -596,7 +595,7 @@
 		break;
 	case IEEE80211_AMPDU_TX_START:
 		mtxq->agg_ssn = IEEE80211_SN_TO_SEQ(ssn);
-		ret = IEEE80211_AMPDU_TX_START_IMMEDIATE;
+		ieee80211_start_tx_ba_cb_irqsafe(vif, sta->addr, tid);
 		break;
 	case IEEE80211_AMPDU_TX_STOP_CONT:
 		mtxq->aggr = false;
@@ -606,7 +605,7 @@
 	}
 	mutex_unlock(&dev->mt76.mutex);
 
-	return ret;
+	return 0;
 }
 
 static void
--- a/mt7615/main.c
+++ b/mt7615/main.c
@@ -780,7 +780,6 @@
 	u16 tid = params->tid;
 	u16 ssn = params->ssn;
 	struct mt76_txq *mtxq;
-	int ret = 0;
 
 	if (!txq)
 		return -EINVAL;
@@ -815,7 +814,7 @@
 	case IEEE80211_AMPDU_TX_START:
 		ssn = mt7615_mac_get_sta_tid_sn(dev, msta->wcid.idx, tid);
 		params->ssn = ssn;
-		ret = IEEE80211_AMPDU_TX_START_IMMEDIATE;
+		ieee80211_start_tx_ba_cb_irqsafe(vif, sta->addr, tid);
 		break;
 	case IEEE80211_AMPDU_TX_STOP_CONT:
 		mtxq->aggr = false;
@@ -825,7 +824,7 @@
 	}
 	mt7615_mutex_release(dev);
 
-	return ret;
+	return 0;
 }
 
 static int
--- a/mt76x02_util.c
+++ b/mt76x02_util.c
@@ -361,7 +361,6 @@
 	u16 tid = params->tid;
 	u16 ssn = params->ssn;
 	struct mt76_txq *mtxq;
-	int ret = 0;
 
 	if (!txq)
 		return -EINVAL;
@@ -391,7 +390,7 @@
 		break;
 	case IEEE80211_AMPDU_TX_START:
 		mtxq->agg_ssn = IEEE80211_SN_TO_SEQ(ssn);
-		ret = IEEE80211_AMPDU_TX_START_IMMEDIATE;
+		ieee80211_start_tx_ba_cb_irqsafe(vif, sta->addr, tid);
 		break;
 	case IEEE80211_AMPDU_TX_STOP_CONT:
 		mtxq->aggr = false;
@@ -400,7 +399,7 @@
 	}
 	mutex_unlock(&dev->mt76.mutex);
 
-	return ret;
+	return 0;
 }
 EXPORT_SYMBOL_GPL(mt76x02_ampdu_action);
 
