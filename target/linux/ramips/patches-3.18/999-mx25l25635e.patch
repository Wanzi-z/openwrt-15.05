--- a/drivers/mtd/spi-nor/spi-nor.c
+++ b/drivers/mtd/spi-nor/spi-nor.c
@@ -908,11 +908,12 @@
 	{ },
 };

-static const struct flash_info *spi_nor_read_id(struct spi_nor *nor)
+static const struct flash_info *spi_nor_read_id(struct spi_nor *nor,
+						const char *name)
 {
 	int			tmp;
 	u8			id[SPI_NOR_MAX_ID_LEN];
-	const struct flash_info	*info;
+	const struct flash_info	*info, *first_match = NULL;

 	tmp = nor->read_reg(nor, SPINOR_OP_RDID, id, SPI_NOR_MAX_ID_LEN);
 	if (tmp < 0) {
@@ -923,8 +924,14 @@
 	for (tmp = 0; tmp < ARRAY_SIZE(spi_nor_ids) - 1; tmp++) {
 		info = &spi_nor_ids[tmp];
 		if (info->id_len) {
-			if (!memcmp(info->id, id, info->id_len))
-				return &spi_nor_ids[tmp];
+			if (!memcmp(info->id, id, info->id_len)) {
+				if (!name || !strcmp(name, info->name))
+					return info;
+				if (!first_match)
+					first_match = info;
+			}
 		}
 	}
+	if (first_match)
+		return first_match;
 	dev_err(nor->dev, "unrecognized JEDEC id bytes: %02x, %2x, %2x\n",
@@ -1246,7 +1253,7 @@
 		info = spi_nor_match_id(name);
 	/* Try to auto-detect if chip name wasn't specified or not found */
 	if (!info)
-		info = spi_nor_read_id(nor);
+		info = spi_nor_read_id(nor, NULL);
 	if (IS_ERR_OR_NULL(info))
 		return -ENOENT;

@@ -1257,7 +1264,7 @@
 	if (name && info->id_len) {
 		const struct flash_info *jinfo;

-		jinfo = spi_nor_read_id(nor);
+		jinfo = spi_nor_read_id(nor, name);
 		if (IS_ERR(jinfo)) {
 			return PTR_ERR(jinfo);
 		} else if (jinfo != info) {
